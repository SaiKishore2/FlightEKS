version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    environment: { ZOOKEEPER_CLIENT_PORT: 2181 }
    ports: ["2181:2181"]
  kafka:
    image: confluentinc/cp-kafka:7.4.1
    depends_on: [zookeeper]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports: ["29092:29092"]
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.1
    depends_on: [kafka, zookeeper]
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    ports: ["8081:8081"]
  producer:
    build: ./services/producer
    environment: { KAFKA_BROKER: kafka:9092, KAFKA_TOPIC: flight-events }
    depends_on: [kafka]
  consumer:
    build: ./services/consumer
    environment: { KAFKA_BROKER: kafka:9092, KAFKA_TOPIC: flight-events, ALERT_SNS_ARN: local }
    depends_on: [kafka]
  webhook:
    build: ./services/webhook
    environment: { PORT: 4000 }
    ports: ["4000:4000"]
